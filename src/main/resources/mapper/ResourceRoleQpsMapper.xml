<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gzf.sentinel.mapper.ResourceRoleQpsMapper">
    <resultMap id="BaseResultMap" type="com.gzf.sentinel.entity.ResourceRoleQps">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="app_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="api" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="limit_qps" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="create_at" jdbcType="BIGINT" javaType="java.lang.Long"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, app_id, api, limit_qps, create_at
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from resource_role_qps
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultType="com.gzf.sentinel.entity.ResourceRoleQps">
      select
      id, app_id appId, api, limit_qps limitQps, create_at createAt
      from resource_role_qps
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from resource_role_qps
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.gzf.sentinel.entity.ResourceRoleQps">
    insert into resource_role_qps (id, app_id, api, 
      limit_qps, create_at)
    values (#{id,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, #{api,jdbcType=VARCHAR}, 
      #{limitQps,jdbcType=BIGINT}, #{createAt,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.gzf.sentinel.entity.ResourceRoleQps">
        insert into resource_role_qps
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="api != null">
                api,
            </if>
            <if test="limitQps != null">
                limit_qps,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=VARCHAR},
            </if>
            <if test="api != null">
                #{api,jdbcType=VARCHAR},
            </if>
            <if test="limitQps != null">
                #{limitQps,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.gzf.sentinel.entity.ResourceRoleQps">
        update resource_role_qps
        <set>
            <if test="appId != null">
                app_id = #{appId,jdbcType=VARCHAR},
            </if>
            <if test="api != null">
                api = #{api,jdbcType=VARCHAR},
            </if>
            <if test="limitQps != null">
                limit_qps = #{limitQps,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gzf.sentinel.entity.ResourceRoleQps">
    update resource_role_qps
    set app_id = #{appId,jdbcType=VARCHAR},
      api = #{api,jdbcType=VARCHAR},
      limit_qps = #{limitQps,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>